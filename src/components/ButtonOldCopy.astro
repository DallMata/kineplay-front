---
interface Props {
    title: string;
    body: string;
    href: string;
    imageSrc: string;
    color: string;
}

const { href, title, body, imageSrc, color} = Astro.props;
---

<li class="link-card" style={`--card-color: ${color};`}>
    <a href={href}>
        <div class="card-content">
            {imageSrc && <img src={imageSrc} alt={title} class="card-image" />}
            <div class="text-content">
                <h2>{title}</h2>
                <p>{body}</p>
            </div>
        </div>
    </a>
</li>

<style>
    .link-card {
list-style: none;
position: relative;
display: flex;
align-items: center;
justify-content: center;
background-color: var(--card-color, #03A1CF); /* El color base viene del prop */
width: 300px;
height: 60px;
overflow: hidden;
margin: 5px;
border-radius: 8px;
transition: background-color 0.5s ease;
}

.link-card::before {
content: "";
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
background: none;
z-index: 0;
transition: background 0.9s ease;
opacity: 0.8;
}

.link-card:hover::before {
background: linear-gradient(90deg, white, var(--card-color)); /* Gradiente de blanco al color dinÃ¡mico */
}

.link-card > a {
position: relative;
z-index: 1;
width: 100%;
text-decoration: none;
line-height: 1.4;
color: white;
font-size: 1.25rem;
display: flex;
align-items: center;
justify-content: center;
padding: 1rem;
}

.card-content {
display: flex;
align-items: center;
}

.card-image {
width: 40px;
height: 40px;
margin-right: 1rem;
object-fit: contain;
}

.text-content {
display: flex;
flex-direction: column;
}

h2 {
margin: 0;
color: white;
}

p {
margin: 0.5rem 0 0 0;
color: white;
}

@media (max-width: 768px) {
.link-card {
    width: 100%;
}
}
</style>
