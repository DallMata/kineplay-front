---
import Button from '../components/Button.astro';
import LoginLayout from '../layouts/LoginLayout.astro';
import Layout from '../layouts/Layout.astro';
import ButtonOldCopy from '../components/ButtonOldCopy.astro';

interface Props {
	title: string;
}
const { title } = Astro.props;

---

<LoginLayout title="loginLayout">
	<body>
		<header>
			<h1>Bienvenido a <span class="text-kine">KINE</span><span class="text-play">PLAY</span></h1>
		</header>
		
		<div class="login-container">
			
			<h2>Iniciar sesión</h2>
			<form id="loginForm" onsubmit="event.preventDefault(); handleLogin();">
				<div class="input-group">
					<label for="username">Email</label>
					<input type="text" id="email" name="email" required />
				</div>
				<div class="input-group">
					<label for="password">Contraseña</label>
					<input type="password" id="password" name="password" required />
				</div>
				<div class="button-container">
					<Button	
						title="Ingresar"
						body=""
						imageSrc=""
						color="#03A1CF"
					/>
					<ButtonOldCopy
						href="register"
						title="Registrarse"
						body=""
						imageSrc=""
						color="#FFBD59"
					/>
				</div>
			</form>
		</div>

		<script client:load>
			async function handleLogin() {
			  const email = document.getElementById('email').value;
			  const password = document.getElementById('password').value;

			  console.log('Email enviado:', email);
        		console.log('Contraseña enviada:', password);
	  
			  try {
				console.log('Entre try login');

				const response = await fetch('http://localhost:80/usuarios/usuarios.php?login=true', {
				  method: 'POST',
				  headers: {
					'Content-Type': 'application/json',
				  },
				  body: JSON.stringify({email, password}),
				});
	  
				const data = await response.json();
	  
				if (response.ok) {
				  console.log('Login exitoso:', data);

				  // Almacenar la ID de usuario en sessionStorage
				sessionStorage.setItem('id', data.usuario.id);
				sessionStorage.setItem('nombre', data.usuario.nombre);
				sessionStorage.setItem('apellido', data.usuario.apellido);
				sessionStorage.setItem('email', data.usuario.email);
				sessionStorage.setItem('dni', data.usuario.dni);


				  // Aquí puedes redirigir al usuario a otra página o realizar otras acciones
				  window.location.href = "/pacients";

				} else {
				  console.error('Error en el login:', data.error);
				  console.error('Data', data);
				}
			  } catch (error) {
				console.error('Error en la solicitud:', error);
			  }
			}
		  </script>

	</body>
	
	
</LoginLayout>






<style is:global>

	
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #fafafa;
		color: #121212;
		margin: 0;
		padding: 0;
	}
	header {
    background-color: #ffffff;
    width: 100%;
    display: flex; /* Activar flexbox */
    align-items: center; /* Centra verticalmente */
    justify-content: center; /* Centra horizontalmente */
    padding-top: 25px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    height: 100px;
}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		padding-bottom: 20px;
	}
	.login-container {
		width: 25%;
		margin: 10px auto;
		background-color: white;
		padding: 20px;
		border-radius: 10px;
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
		text-align: center;
	}
	h2 {
		margin-bottom: 20px;
		color: rgb(var(--accent-dark));
		font-size: 2rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;		
		color: black;
	}
	.input-group {
		margin-bottom: 15px;
		text-align: left;
		align-items: center;
		justify-content: center;
	}
	.input-group label {
		display: block;
		margin-bottom: 5px;
		color: black;
		font-weight: 600;
	}
	.input-group input {
		width: 90%;
		padding: 10px;
		border: 1px solid #ccc;
		border-radius: 5px;
		font-size: 1rem;
	}
	.text-kine {
		color: #FFBD59;
	}
	.text-play {
		color: #03A1CF;
	}

	.button-container {
    display: flex;
    flex-direction: column; /* Alinea los botones uno encima del otro */
    align-items: center; /* Centra los botones horizontalmente */
    gap: 10px; /* Espacio entre los botones */
}

button {
    width: 80%; /* O ajusta según lo necesario para que tengan un buen tamaño */
    padding: 10px 20px;
}
</style>
